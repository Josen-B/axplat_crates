var searchIndex = new Map(JSON.parse('[["axplat",{"t":"QHHCQQXCCXCCXCJKHMHMKHMHMHMHMFIKNNNNHMNNNHMNHMNNNHMNFSSSTTTKFISFFTTITFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMONNNNNQONNHMHMHNHMNONNNNNNNNNNHNNNNNNNNNNNNNNNNQHMKHMHMFTTSTSTSSSTKITNNNNNNNNNNNNNHHNNNNNNNHMNNNNNNNHMNNNNNNNNNNNNNNNNHHNNNNHMNNNNNHMNNNNNNNHMNNNNNHH","n":["assert_str_eq","call_main","call_secondary_main","console","console_print","console_println","impl_plat_interface","init","irq","main","mem","power","secondary_main","time","CONSOLE_LOCK","ConsoleIf","read_bytes","","write_bytes","","InitIf","init_early","","init_early_secondary","","init_later","","init_later_secondary","","HandlerTable","IrqHandler","IrqIf","borrow","borrow_mut","default","from","handle","","","into","new","register","","register_handler","set_enable","","try_from","try_into","type_id","unregister","","unregister_handler","Aligned4K","DEFAULT_MMIO_FLAGS","DEFAULT_RAM_FLAGS","DEFAULT_RESERVED_FLAGS","DEVICE","EXECUTE","FREE","MemIf","MemRegionFlags","OverlapErr","PAGE_SIZE_4K","PhysAddr","PhysMemRegion","READ","RESERVED","RawRange","UNCACHED","VirtAddr","WRITE","add","","add_assign","","all","as_mut_ptr","as_mut_ptr_of","as_ptr","as_ptr_of","as_usize","","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","check_sorted_ranges_overlap","clone","","","","clone_to_uninit","","","","cmp","","complement","contains","default","","deref","deref_mut","difference","empty","eq","","extend","flags","fmt","","","","","","","","","","","","from","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_mut_ptr_of","from_name","from_ptr_of","from_usize","","insert","intersection","intersects","into","","","","","into_iter","is_all","is_empty","iter","iter_names","mmio_ranges","","name","new","new_mmio","new_ram","new_reserved","not","pa","paddr","partial_cmp","","phys_ram_ranges","","phys_to_virt","","ranges_difference","remove","reserved_phys_ram_ranges","","set","size","sub","","","","","sub_assign","","","symmetric_difference","toggle","total_ram_size","try_from","","","","","try_into","","","","","type_id","","","","","union","va","virt_to_phys","","PowerIf","cpu_boot","","system_off","","Duration","MAX","MICROSECOND","MICROS_PER_SEC","MILLISECOND","MILLIS_PER_SEC","NANOSECOND","NANOS_PER_MICROS","NANOS_PER_MILLIS","NANOS_PER_SEC","SECOND","TimeIf","TimeValue","ZERO","abs_diff","add","add_assign","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","busy_wait","busy_wait_until","checked_add","checked_div","checked_mul","checked_sub","clone","clone_to_uninit","cmp","current_ticks","","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","epochoffset_nanos","","eq","fmt","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","is_zero","monotonic_time","monotonic_time_nanos","mul","mul_assign","mul_f32","mul_f64","nanos_to_ticks","","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","set_oneshot_timer","","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","","ticks_to_nanos","","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","wall_time","wall_time_nanos"],"q":[[0,"axplat"],[14,"axplat::console"],[20,"axplat::init"],[29,"axplat::irq"],[52,"axplat::mem"],[217,"axplat::power"],[222,"axplat::time"],[316,"kspin"],[317,"handler_table"],[318,"core::result"],[319,"core::any"],[320,"core::option"],[321,"memory_addr::addr"],[322,"core::iter::traits::iterator"],[323,"core::cmp"],[324,"core::iter::traits::collect"],[325,"core::fmt"],[326,"bitflags::iter"],[327,"core::marker"],[328,"core::ops::function"],[329,"core::time"],[330,"core::hash"],[331,"axplat_macros"],[332,"memory_addr"]],"i":"`````````````````Ej`0``El`0`0`0```Ab000`En111`01`0111`01````Bb00``````00`0`0BdBf10200001022222222Cd321C`14320`4320432032443211443240444443332220143322044444242324441432044444`F`121115`143`0`0`5`0515443354355`2543125431254315``0``Fb`0`Dj0`0`0```0``00000000000000``0000000`Fd1111111`01111111111111111``1111`011111`01111111`011111``","f":"`{{bb}d}{bd}```````````{{}f}`{{{n{h{l{j}}}}}b}0{{{n{{l{j}}}}}A`}0`{{bb}A`}0{bA`}01100```{n{{n{c}}}{}}{{{n{h}}}{{n{hc}}}{}}{{}Ab}{cc{}}44{{{n{Ab}}b}Ad}{{}c{}}3{{bAf}Ad}0{{{n{Ab}}b{Aj{}{{Ah{A`}}}}}Ad}{{bAd}A`}0{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{nAn}{b{{B`{Af}}}}0{{{n{Ab}}b}{{B`{{Aj{}{{Ah{A`}}}}}}}}`{{}Bb}00``````{{}b}````````{{Bdb}Bd}{{Bfb}Bf}{{{n{hBd}}b}A`}{{{n{hBf}}b}A`}5{Bfj}{Bf}10{Bdb}{Bfb}{{BbBb}Bb}{{{n{hBb}}Bb}A`}10{{{n{Bb}}}b}021{n{{n{c}}}{}}0000{{{n{h}}}{{n{hc}}}{}}0000{c{{Al{A`Bh}}}{{Bn{}{{Bj{Bl}}}}}}{{{n{Bb}}}Bb}{{{n{Bd}}}Bd}{{{n{Bf}}}Bf}{{{n{C`}}}C`}{{nj}A`}000{{{n{Bd}}{n{Bd}}}Cb}{{{n{Bf}}{n{Bf}}}Cb}{BbBb}{{{n{Bb}}Bb}Ad}{{}Bd}{{}Bf}{{{n{{Cd{c}}}}}{{n{e}}}{}{}}{{{n{h{Cd{c}}}}}{{n{he}}}{}{}}{{BbBb}Bb}{{}Bb}{{{n{Bd}}{n{Bd}}}Ad}{{{n{Bf}}{n{Bf}}}Ad}{{{n{hBb}}c}A`{{Cf{}{{Bj{Bb}}}}}}{C`Bb}{{{n{Bb}}{n{hCh}}}Cj}0000{{{n{Bd}}{n{hCh}}}{{Al{A`Cl}}}}00{{{n{Bf}}{n{hCh}}}{{Al{A`Cl}}}}00{{{n{C`}}{n{hCh}}}Cj}{cc{}}00{bBd}1{bBf}2{b{{B`{Bb}}}}{bBb}00{cBb{{Cf{}{{Bj{Bb}}}}}}{{}Bf}{{{n{Cn}}}{{B`{Bb}}}}165{{{n{hBb}}Bb}A`}{{BbBb}Bb}{{{n{Bb}}Bb}Ad}{{}c{}}0000{Bbc{}}{{{n{Bb}}}Ad}0{{{n{Bb}}}{{D`{Bb}}}}{{{n{Bb}}}{{Db{Bb}}}}{{}{{n{{l{Bl}}}}}}0{C`n}{c{{Cd{c}}}Dd}{{bb{n{Cn}}}C`}00{BbBb}`{C`Bd}{{{n{Bd}}{n{Bd}}}{{B`{Cb}}}}{{{n{Bf}}{n{Bf}}}{{B`{Cb}}}}77{BdBf}0{{{n{{l{Bl}}}}{n{{l{Bl}}}}c}{{Al{A`Bh}}}{{Df{Bl}}}}{{{n{hBb}}Bb}A`}::{{{n{hBb}}BbAd}A`}{C`b}{{BbBb}Bb}{{Bdb}Bd}{{BdBd}b}{{Bfb}Bf}{{BfBf}b}7{{{n{hBd}}b}A`}{{{n{hBf}}b}A`}69{{}b}{c{{Al{e}}}{}{}}0000{{}{{Al{c}}}{}}0000{nAn}0000:`{BfBd}0`{{bb}A`}0{{}d}0```{{}Dh}`0`000````{{DjDj}Dj}0{{{n{hDj}}Dj}A`}{{{n{Dj}}}Dl}0{{{n{Dj}}}Dn}{{{n{Dj}}}E`}2{{{n{Dj}}}Dh}21{n{{n{c}}}{}}{{{n{h}}}{{n{hc}}}{}}{DjA`}{EbA`}{{DjDj}{{B`{Dj}}}}{{DjEd}{{B`{Dj}}}}01{{{n{Dj}}}Dj}{{nj}A`}{{{n{Dj}}{n{Dj}}}Cb}??{{}Dj}{{DjEd}Dj}{{{n{hDj}}Ed}A`}{{DjDj}Dn}{{DjDj}E`}{{DjDn}Dj}{{DjE`}Dj}{{}Dh}0{{{n{Dj}}{n{Dj}}}Ad}{{{n{Dj}}{n{hCh}}}{{Al{A`Cl}}}}{cc{}}{DhDj}000000{DnDj}{E`Dj}2{{{n{Dj}}{n{hc}}}A`Ef}{{}c{}}{{{n{Dj}}}Ad}{{}Eb}:{{DjEd}Dj}{{{n{hDj}}Ed}A`}>={DhDh}0{{DhEd}Dj}{{{n{Dj}}{n{Dj}}}{{B`{Cb}}}}{{DjDj}Dj}50{DhA`}01{{{n{hDj}}Dj}A`}{{{n{Dj}}}Ed}00{cDj{{Bn{}{{Bj{{n{Dj}}}}}}}}{cDj{{Bn{}{{Bj{Dj}}}}}}88{c{{Al{e}}}{}{}}{Dn{{Al{DjEh}}}}{E`{{Al{DjEh}}}}{{}{{Al{c}}}{}}{nAn}{{}Eb}{{}Dh}","D":"AKd","p":[[1,"usize"],[1,"never"],[8,"SpinNoIrq",316],[0,"mut"],[1,"u8"],[1,"slice"],[1,"reference",null,null,1],[1,"unit"],[5,"HandlerTable",29,317],[1,"bool"],[8,"IrqHandler",29],[17,"Output"],[1,"fn"],[6,"Result",318,null,1],[5,"TypeId",319],[6,"Option",320,null,1],[5,"MemRegionFlags",52],[5,"PhysAddr",52,321],[5,"VirtAddr",52,321],[8,"OverlapErr",52],[17,"Item"],[8,"RawRange",52],[10,"Iterator",322],[5,"PhysMemRegion",52],[6,"Ordering",323],[5,"Aligned4K",52],[10,"IntoIterator",324],[5,"Formatter",325],[8,"Result",325],[5,"Error",325],[1,"str"],[5,"Iter",326],[5,"IterNames",326],[10,"Sized",327],[10,"FnMut",328],[1,"u64"],[5,"Duration",222,329],[1,"u128"],[1,"f32"],[1,"f64"],[8,"TimeValue",222],[1,"u32"],[10,"Hasher",330],[5,"TryFromFloatSecsError",329],[10,"ConsoleIf",14],[10,"InitIf",20],[10,"IrqIf",29],[10,"MemIf",52],[10,"PowerIf",217],[10,"TimeIf",222]],"r":[[9,331],[12,331],[29,317],[32,317],[33,317],[34,317],[35,317],[38,317],[39,317],[40,317],[43,317],[46,317],[47,317],[48,317],[51,317],[62,332],[63,321],[69,321],[71,321],[72,321],[73,321],[74,321],[76,321],[77,321],[78,321],[79,321],[80,321],[81,321],[92,321],[93,321],[97,321],[98,321],[102,321],[103,321],[106,321],[107,321],[109,321],[110,321],[113,321],[114,321],[119,321],[120,321],[128,321],[129,321],[130,321],[131,321],[132,321],[133,321],[137,321],[138,321],[139,321],[140,321],[147,321],[149,321],[150,321],[151,321],[157,321],[158,321],[173,332],[175,321],[176,321],[188,321],[189,321],[190,321],[191,321],[193,321],[194,321],[200,321],[201,321],[205,321],[206,321],[210,321],[211,321],[214,332],[222,329],[223,329],[224,329],[226,329],[228,329],[232,329],[235,329],[236,329],[237,329],[238,329],[239,329],[240,329],[241,329],[242,329],[243,329],[244,329],[245,329],[246,329],[247,329],[248,329],[251,329],[252,329],[253,329],[254,329],[255,329],[256,329],[257,329],[260,329],[261,329],[262,329],[263,329],[264,329],[265,329],[266,329],[269,329],[270,329],[271,329],[272,329],[273,329],[274,329],[275,329],[276,329],[277,329],[278,329],[279,329],[280,329],[281,329],[282,329],[283,329],[284,329],[287,329],[288,329],[289,329],[290,329],[293,329],[294,329],[295,329],[296,329],[297,329],[300,329],[301,329],[302,329],[303,329],[304,329],[305,329],[306,329],[309,329],[310,329],[311,329],[312,329],[313,329]],"b":[[86,"impl-MemRegionFlags"],[87,"impl-Flags-for-MemRegionFlags"],[123,"impl-UpperHex-for-MemRegionFlags"],[124,"impl-LowerHex-for-MemRegionFlags"],[125,"impl-Octal-for-MemRegionFlags"],[126,"impl-Debug-for-MemRegionFlags"],[127,"impl-Binary-for-MemRegionFlags"],[128,"impl-UpperHex-for-PhysAddr"],[129,"impl-Debug-for-PhysAddr"],[130,"impl-LowerHex-for-PhysAddr"],[131,"impl-UpperHex-for-VirtAddr"],[132,"impl-Debug-for-VirtAddr"],[133,"impl-LowerHex-for-VirtAddr"],[143,"impl-Flags-for-MemRegionFlags"],[144,"impl-MemRegionFlags"],[188,"impl-Sub%3Cusize%3E-for-PhysAddr"],[189,"impl-Sub-for-PhysAddr"],[190,"impl-Sub%3Cusize%3E-for-VirtAddr"],[191,"impl-Sub-for-VirtAddr"],[305,"impl-Sum%3C%26Duration%3E-for-Duration"],[306,"impl-Sum-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGIAHQAhAAIALwACAEgAAwBYAAAAWwAJAGYACQByAAMAeAABAHwACwCLAAAAjQAAAJAAAAChAAAAsAABAL0AAwDCAAEAxwAOAO4AAQD4AAEAAAECAAUBAgAOAQEAGwEAACABAQAnAQAALQEBADIBAQA2AQAAOQEBAA==","P":[[32,"T"],[34,""],[35,"T"],[36,""],[39,"U"],[40,""],[46,"U,T"],[47,"U"],[48,""],[90,"T"],[100,""],[115,"T,Deref::Target"],[117,""],[121,"T"],[122,""],[135,"T"],[138,""],[139,"T"],[140,""],[141,"T"],[142,""],[146,"T"],[147,""],[155,"U"],[160,"IntoIterator::IntoIter"],[161,""],[168,"T"],[169,""],[181,"F"],[182,""],[198,"U,T"],[203,"U"],[208,""],[247,"T"],[249,""],[271,"T"],[272,""],[282,"__H"],[283,"U"],[284,""],[305,"I"],[307,""],[309,"U,T"],[310,""],[312,"U"],[313,""]]}],["axplat_aarch64_peripherals",{"t":"QCCQCCCQHHHHHHHHHHHHHHHHHHHHHHHH","n":["console_if_impl","generic_timer","gic","irq_if_impl","pl011","pl031","psci","time_if_impl","current_ticks","enable_irqs","init_early","nanos_to_ticks","set_oneshot_timer","ticks_to_nanos","handle_irq","init_gicc","init_gicd","register_handler","set_enable","unregister_handler","getchar","init_early","irq_handler","putchar","read_bytes","write_bytes","epochoffset_nanos","init_early","cpu_off","cpu_on","init","system_off"],"q":[[0,"axplat_aarch64_peripherals"],[8,"axplat_aarch64_peripherals::generic_timer"],[14,"axplat_aarch64_peripherals::gic"],[20,"axplat_aarch64_peripherals::pl011"],[26,"axplat_aarch64_peripherals::pl031"],[28,"axplat_aarch64_peripherals::psci"],[32,"memory_addr::addr"],[33,"axplat::irq"],[34,"core::option"]],"i":"````````````````````````````````","f":"````````{{}b}{df}{{}f}{bb}{bf}132{{hh}f}{{dj}l}{{dl}f}{d{{n{j}}}}{{}{{n{A`}}}}{hf}8{A`f}{{{Af{Ab{Ad{A`}}}}}d}{{{Af{{Ad{A`}}}}}f}=3;{{ddd}f}{{{Af{Ah}}}f}{{}Aj}","D":"Db","p":[[1,"u64"],[1,"usize"],[1,"unit"],[5,"VirtAddr",32],[8,"IrqHandler",33],[1,"bool"],[6,"Option",34,null,1],[1,"u8"],[0,"mut"],[1,"slice"],[1,"reference",null,null,1],[1,"str"],[1,"never"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["axplat_macros",{"t":"XX","n":["main","secondary_main"],"q":[[0,"axplat_macros"]],"i":"``","f":"``","D":"f","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[10234,1279,177]}